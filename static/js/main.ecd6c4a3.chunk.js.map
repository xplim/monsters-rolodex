{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","alt","src","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","e","target","value","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","trim","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAIaA,EAAO,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrB,OACE,sBAAKC,UAAU,OAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAAQI,GAAlC,4BAEL,6BAAKJ,EAAQK,OACb,4BAAIL,EAAQM,YCNLC,G,MAAW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzB,OACE,qBAAKP,UAAU,YAAf,SACGO,EAASC,KAAI,SAACT,GAAD,OACZ,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQI,WCNdM,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACvC,OACE,uBACEX,UAAU,aACVY,KAAK,SACLF,YAAaA,EACbG,SAAU,SAACC,GAAD,OAAOH,EAAaG,EAAEC,OAAOC,YCgC9BC,G,wDAlCb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXX,SAAU,GACVY,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKC,SAAS,CAAElB,SAAUiB,S,oBAG/C,WAAU,IAAD,SAC2BE,KAAKR,MAA/BX,EADD,EACCA,SAAUY,EADX,EACWA,YACZQ,EAAmBpB,EAASqB,QAAO,SAAC7B,GAAD,OACvCA,EAAQK,KAAKyB,cAAcC,SAASX,EAAYY,OAAOF,kBAGzD,OACE,sBAAK7B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEU,YAAY,kBACZC,aAAc,SAACK,GAAD,OAAW,EAAKS,SAAS,CAAEN,YAAaH,OAExD,cAAC,EAAD,CAAUT,SAAUoB,W,GA7BVK,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ecd6c4a3.chunk.js","sourcesContent":["import React from 'react';\n\nimport './card.styles.css';\n\nexport const Card = ({ monster }) => {\n  return (\n    <div className=\"card\">\n      <img\n        alt=\"monster\"\n        src={`https://robohash.org/${monster.id}?set=set2&size=180x180`}\n      />\n      <h2>{monster.name}</h2>\n      <p>{monster.email}</p>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { Card } from '../card/card.component';\n\nimport './card-list.styles.css';\n\nexport const CardList = ({ monsters }) => {\n  return (\n    <div className=\"card-list\">\n      {monsters.map((monster) => (\n        <Card key={monster.id} monster={monster} />\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './search-box.styles.css';\n\nexport const SearchBox = ({ placeholder, handleChange }) => {\n  return (\n    <input\n      className=\"search-box\"\n      type=\"search\"\n      placeholder={placeholder}\n      onChange={(e) => handleChange(e.target.value)}\n    />\n  );\n};\n","import React, { Component } from 'react';\n\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: '',\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.trim().toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder=\"search monsters\"\n          handleChange={(value) => this.setState({ searchField: value })}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}